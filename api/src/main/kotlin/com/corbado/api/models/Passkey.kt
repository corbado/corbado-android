/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.corbado.api.models

import com.corbado.api.models.AaguidDetails

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param credentialID 
 * @param attestationType 
 * @param transport 
 * @param backupEligible 
 * @param backupState 
 * @param authenticatorAAGUID 
 * @param sourceOS 
 * @param sourceBrowser 
 * @param lastUsed Timestamp of when the passkey was last used in yyyy-MM-dd'T'HH:mm:ss format
 * @param created Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss format
 * @param status Status
 * @param aaguidDetails 
 * @param createdMs Unix timestamp of when the passkey was created (in milliseconds)
 * @param lastUsedMs Unix timestamp of when the passkey was last used (in milliseconds)
 * @param tags Tags attached to a passkey (e.g. synced or hybrid)
 */


data class Passkey (

    @Json(name = "id")
    val id: kotlin.String,

    @Json(name = "credentialID")
    val credentialID: kotlin.String,

    @Json(name = "attestationType")
    val attestationType: kotlin.String,

    @Json(name = "transport")
    val transport: kotlin.collections.List<Passkey.Transport>,

    @Json(name = "backupEligible")
    val backupEligible: kotlin.Boolean,

    @Json(name = "backupState")
    val backupState: kotlin.Boolean,

    @Json(name = "authenticatorAAGUID")
    val authenticatorAAGUID: kotlin.String,

    @Json(name = "sourceOS")
    val sourceOS: kotlin.String,

    @Json(name = "sourceBrowser")
    val sourceBrowser: kotlin.String,

    /* Timestamp of when the passkey was last used in yyyy-MM-dd'T'HH:mm:ss format */
    @Json(name = "lastUsed")
    val lastUsed: kotlin.String,

    /* Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss format */
    @Json(name = "created")
    val created: kotlin.String,

    /* Status */
    @Json(name = "status")
    val status: Passkey.Status,

    @Json(name = "aaguidDetails")
    val aaguidDetails: AaguidDetails,

    /* Unix timestamp of when the passkey was created (in milliseconds) */
    @Json(name = "createdMs")
    val createdMs: kotlin.Long,

    /* Unix timestamp of when the passkey was last used (in milliseconds) */
    @Json(name = "lastUsedMs")
    val lastUsedMs: kotlin.Long,

    /* Tags attached to a passkey (e.g. synced or hybrid) */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>

) {

    /**
     * 
     *
     * Values: usb,nfc,ble,`internal`,hybrid,smartMinusCard
     */
    @JsonClass(generateAdapter = false)
    enum class Transport(val value: kotlin.String) {
        @Json(name = "usb") usb("usb"),
        @Json(name = "nfc") nfc("nfc"),
        @Json(name = "ble") ble("ble"),
        @Json(name = "internal") `internal`("internal"),
        @Json(name = "hybrid") hybrid("hybrid"),
        @Json(name = "smart-card") smartMinusCard("smart-card");
    }
    /**
     * Status
     *
     * Values: pending,active
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "pending") pending("pending"),
        @Json(name = "active") active("active");
    }

}

