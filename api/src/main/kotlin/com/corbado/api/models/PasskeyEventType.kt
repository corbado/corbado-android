/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.corbado.api.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: loginMinusExplicitMinusAbort,loginMinusError,loginMinusErrorMinusUntyped,loginMinusErrorMinusUnexpected,loginMinusOneMinusTapMinusSwitch,userMinusAppendMinusAfterMinusCrossMinusPlatformMinusBlacklisted,userMinusAppendMinusAfterMinusLoginMinusErrorMinusBlacklisted,appendMinusCredentialMinusExists,appendMinusExplicitMinusAbort,appendMinusError,appendMinusErrorMinusUnexpected,manageMinusErrorMinusUnexpected,appendMinusLearnMinusMore
 */

@JsonClass(generateAdapter = false)
enum class PasskeyEventType(val value: kotlin.String) {

    @Json(name = "login-explicit-abort")
    loginMinusExplicitMinusAbort("login-explicit-abort"),

    @Json(name = "login-error")
    loginMinusError("login-error"),

    @Json(name = "login-error-untyped")
    loginMinusErrorMinusUntyped("login-error-untyped"),

    @Json(name = "login-error-unexpected")
    loginMinusErrorMinusUnexpected("login-error-unexpected"),

    @Json(name = "login-one-tap-switch")
    loginMinusOneMinusTapMinusSwitch("login-one-tap-switch"),

    @Json(name = "user-append-after-cross-platform-blacklisted")
    userMinusAppendMinusAfterMinusCrossMinusPlatformMinusBlacklisted("user-append-after-cross-platform-blacklisted"),

    @Json(name = "user-append-after-login-error-blacklisted")
    userMinusAppendMinusAfterMinusLoginMinusErrorMinusBlacklisted("user-append-after-login-error-blacklisted"),

    @Json(name = "append-credential-exists")
    appendMinusCredentialMinusExists("append-credential-exists"),

    @Json(name = "append-explicit-abort")
    appendMinusExplicitMinusAbort("append-explicit-abort"),

    @Json(name = "append-error")
    appendMinusError("append-error"),

    @Json(name = "append-error-unexpected")
    appendMinusErrorMinusUnexpected("append-error-unexpected"),

    @Json(name = "manage-error-unexpected")
    manageMinusErrorMinusUnexpected("manage-error-unexpected"),

    @Json(name = "append-learn-more")
    appendMinusLearnMinusMore("append-learn-more");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is PasskeyEventType) "$data" else null

        /**
         * Returns a valid [PasskeyEventType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): PasskeyEventType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

