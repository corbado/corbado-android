/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.corbado.api.models

import com.corbado.api.models.FullNameWithError
import com.corbado.api.models.GeneralBlockCompleted
import com.corbado.api.models.GeneralBlockLoginInit
import com.corbado.api.models.GeneralBlockPasskeyAppend
import com.corbado.api.models.GeneralBlockPasskeyAppended
import com.corbado.api.models.GeneralBlockPasskeyVerify
import com.corbado.api.models.GeneralBlockPostSignupEmailVerify
import com.corbado.api.models.GeneralBlockSignupInit
import com.corbado.api.models.GeneralBlockVerifyIdentifier
import com.corbado.api.models.GeneralBlockVerifyIdentifierAlternativeVerificationMethodsInner
import com.corbado.api.models.LoginIdentifierType
import com.corbado.api.models.LoginIdentifierWithError
import com.corbado.api.models.PasskeyIconSet
import com.corbado.api.models.PasskeyOperation
import com.corbado.api.models.RequestError
import com.corbado.api.models.SocialData
import com.corbado.api.models.VerificationMethod

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param blockType 
 * @param challenge 
 * @param identifierValue 
 * @param identifierType 
 * @param autoSubmit 
 * @param passkeyIconSet 
 * @param variant 
 * @param verificationMethod 
 * @param identifier 
 * @param alternativeVerificationMethods 
 * @param isPostLoginVerification 
 * @param shortSession 
 * @param sessionToken 
 * @param identifiers 
 * @param socialData 
 * @param isPhone 
 * @param isPhoneAvailable 
 * @param isEmailAvailable 
 * @param isUsernameAvailable 
 * @param loginHint 
 * @param retryNotBefore 
 * @param error 
 * @param longSession This is only set if the project environment is set to 'dev'. If set the UI components will set the longSession in local storage because the cookie dropping will not work in Safari for example (\"third-party cookie\").
 * @param refreshToken This is only set if the project environment is set to 'dev'. If set the UI components will set the longSession in local storage because the cookie dropping will not work in Safari for example (\"third-party cookie\").
 * @param passkeyOperation 
 * @param fullName 
 * @param conditionalUIChallenge 
 * @param fieldError 
 */


interface BlockBodyData {

    @Json(name = "blockType")
    val blockType: kotlin.String
    @Json(name = "challenge")
    val challenge: kotlin.String
    @Json(name = "identifierValue")
    val identifierValue: kotlin.String
    @Json(name = "identifierType")
    val identifierType: LoginIdentifierType
    @Json(name = "autoSubmit")
    val autoSubmit: kotlin.Boolean
    @Json(name = "passkeyIconSet")
    val passkeyIconSet: PasskeyIconSet
    @Json(name = "variant")
    val variant: BlockBodyData.Variant
    @Json(name = "verificationMethod")
    val verificationMethod: VerificationMethod
    @Json(name = "identifier")
    val identifier: kotlin.String
    @Json(name = "alternativeVerificationMethods")
    val alternativeVerificationMethods: kotlin.collections.List<GeneralBlockVerifyIdentifierAlternativeVerificationMethodsInner>
    @Json(name = "isPostLoginVerification")
    val isPostLoginVerification: kotlin.Boolean
    @Json(name = "shortSession")
    val shortSession: kotlin.String
    @Json(name = "sessionToken")
    val sessionToken: kotlin.String
    @Json(name = "identifiers")
    val identifiers: kotlin.collections.List<LoginIdentifierWithError>
    @Json(name = "socialData")
    val socialData: SocialData
    @Json(name = "isPhone")
    val isPhone: kotlin.Boolean
    @Json(name = "isPhoneAvailable")
    val isPhoneAvailable: kotlin.Boolean
    @Json(name = "isEmailAvailable")
    val isEmailAvailable: kotlin.Boolean
    @Json(name = "isUsernameAvailable")
    val isUsernameAvailable: kotlin.Boolean
    @Json(name = "loginHint")
    val loginHint: BlockBodyData.LoginHint?
    @Json(name = "retryNotBefore")
    val retryNotBefore: kotlin.Int?
    @Json(name = "error")
    val error: RequestError?
    /* This is only set if the project environment is set to 'dev'. If set the UI components will set the longSession in local storage because the cookie dropping will not work in Safari for example (\"third-party cookie\"). */
    @Json(name = "longSession")
    val longSession: kotlin.String?
    /* This is only set if the project environment is set to 'dev'. If set the UI components will set the longSession in local storage because the cookie dropping will not work in Safari for example (\"third-party cookie\"). */
    @Json(name = "refreshToken")
    val refreshToken: kotlin.String?
    @Json(name = "passkeyOperation")
    val passkeyOperation: PasskeyOperation?
    @Json(name = "fullName")
    val fullName: FullNameWithError?
    @Json(name = "conditionalUIChallenge")
    val conditionalUIChallenge: kotlin.String?
    @Json(name = "fieldError")
    val fieldError: RequestError?
    /**
     * 
     *
     * Values: default,afterMinusHybrid,afterMinusError
     */
    @JsonClass(generateAdapter = false)
    enum class Variant(val value: kotlin.String) {
        @Json(name = "default") default("default"),
        @Json(name = "after-hybrid") afterMinusHybrid("after-hybrid"),
        @Json(name = "after-error") afterMinusError("after-error");
    }
    /**
     * 
     *
     * Values: cda
     */
    @JsonClass(generateAdapter = false)
    enum class LoginHint(val value: kotlin.String) {
        @Json(name = "cda") cda("cda");
    }

}

